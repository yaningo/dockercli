Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

google_container_cluster.gke-cluster: Refreshing state... [id=**********]
google_container_node_pool.preemptible_node_pool: Refreshing state... [id=*************/**********/default-pool]

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # google_container_node_pool.preemptible_node_pool will be updated in-place
  ~ resource "google_container_node_pool" "preemptible_node_pool" {
        cluster             = "**********"
        id                  = "*************/**********/default-pool"
        initial_node_count  = 2
        instance_group_urls = [
            "https://www.googleapis.com/compute/v1/projects/*********/zones/*************/instanceGroupManagers/gke-**********-default-pool-ce6d4d29-grp",
        ]
        location            = "*************"
        name                = "default-pool"
      ~ node_count          = 2 -> 3
        node_locations      = [
            "*************",
        ]
        project             = "*********"
        version             = "1.20.9-gke.1001"

        management {
            auto_repair  = true
            auto_upgrade = true
        }

        node_config {
            disk_size_gb      = 100
            disk_type         = "pd-standard"
            guest_accelerator = []
            image_type        = "COS_CONTAINERD"
            labels            = {}
            local_ssd_count   = 0
            machine_type      = "n1-standard-1"
            metadata          = {
                "disable-legacy-endpoints" = "true"
            }
            oauth_scopes      = [
                "https://www.googleapis.com/auth/devstorage.read_only",
                "https://www.googleapis.com/auth/logging.write",
                "https://www.googleapis.com/auth/monitoring",
            ]
            preemptible       = true
            service_account   = "default"
            tags              = []
            taint             = []

            shielded_instance_config {
                enable_integrity_monitoring = true
                enable_secure_boot          = false
            }
        }

        upgrade_settings {
            max_surge       = 1
            max_unavailable = 0
        }
    }

  # google_storage_bucket.static-site-********* will be created
  + resource "google_storage_bucket" "static-site-*********" {
      + bucket_policy_only          = (known after apply)
      + force_destroy               = false
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "static-site-*********"
      + project                     = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + uniform_bucket_level_access = true
      + url                         = (known after apply)

      + website {
          + main_page_suffix = "index.html"
          + not_found_page   = "404.html"
        }
    }

Plan: 1 to add, 1 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: /tmp/tf.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "/tmp/tf.plan"
